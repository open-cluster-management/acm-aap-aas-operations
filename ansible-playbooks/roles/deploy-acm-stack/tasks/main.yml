---

- name: Validate ENV variable
  fail:
    msg: "Required variable ENVhas not been provided"
  when: (ENV is undefined) or (ENV| length == 0)

- name: Validate none local deployment variables
  fail:
    msg: "Required variable {{ item }} has not been provided for {{ ENV }} deployment"
  when:
    - ENV != "local" 
    - (vars[item] is undefined) or (vars[item]| length == 0)
  loop:
    - VAULT_ADDRESS
    - VAULT_TOKEN
  
- name: Validate local deployment variables
  fail:
    msg: "Required variable {{ item }} has not been provided for local deployment"
  when:
    - ENV == "local" 
    - (vars[item] is undefined) or (vars[item]| length == 0)  
  loop:
    - PULL_SECRET
    - S3_BUCKET_NAME
    - S3_ENDPOINT
    - AWS_ACCESS_KEY
    - AWS_SECRET_KEY
    - SLACK_API_URL

- name: Update argocd configuration
  template:
    src: argocd.yaml
    dest: ./../../cluster-bootstrap/openshift-gitops/config/argocd.yaml

- name: Apply openshift-gitops subscription
  kubernetes.core.k8s:
    state: present
    src: "{{ item }}"
  loop:
    - "{{ playbook_dir }}/../../cluster-bootstrap/openshift-gitops/deploy/subscription.yaml"

- name: Wait namespace openshift-gitops is created
  kubernetes.core.k8s_info:
    kind: Namespace
    wait: yes
    name: openshift-gitops
    namespace: openshift-gitops
    wait_sleep: 5
    wait_timeout: 30

- name: Wait till the Object is created
  kubernetes.core.k8s_info:
    kind: Pod
    wait: yes
    wait_condition:
      type: Ready
      status: "True"
    namespace: openshift-gitops
    wait_sleep: 10
    wait_timeout: 300

- name: Apply the openshift-gitops configuration
  kubernetes.core.k8s:
    state: present
    src: "{{ item }}"
  loop:
    - "{{ playbook_dir }}/../../cluster-bootstrap/openshift-gitops/config/argocd.yaml"
    - "{{ playbook_dir }}/../../cluster-bootstrap/openshift-gitops/config/repository.yaml"
    - "{{ playbook_dir }}/../../cluster-bootstrap/openshift-gitops/config/rolebinding.yaml"

- name: Wait all pods to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    wait: yes
    wait_condition:
      type: Ready
    namespace: openshift-gitops
    wait_sleep: 10
    wait_timeout: 300

- name: Wait for Openshift GitOps
  shell: |-
    sleep 10
    while [[ $(kubectl get pods -n openshift-gitops --no-headers --ignore-not-found | awk '/openshift-gitops-repo-server/' | wc -l) -ne 1 ]]; 
        do echo "Waiting for openshift-gitops-repo-server with vault plugin start up and running" && sleep 30;
    done
  register: result

- name: Read definition template file from the Ansible controller file system
  kubernetes.core.k8s:
    state: present
    template: 'multiclusterhub-operator-pull-secret.yaml.j2'
  when:
    ENV == 'local'

- name: Create open-cluster-management namespace
  kubernetes.core.k8s:
    name: open-cluster-management
    api_version: v1
    kind: Namespace
    state: present
  when:
    ENV == 'local'

- name: Apply ArgoCD Applications
  kubernetes.core.k8s:
    state: present
    src: "{{ playbook_dir }}/../../cluster-bootstrap/argocd-apps/{{ ENV }}/{{ item }}/application.yaml"
  loop:
    - "acm"
    - "multicluster-observability"
    - "grafana-dev"
    - "prometheus-config"
    - "patch-operator"
    - "openshift-config"
    - "group-sync"
    - "sso"
    # special case
    # - "alertmanager-to-github"

- name: Wait for ACM Route creation
  kubernetes.core.k8s_info:
    kind: Route
    name: multicloud-console
    namespace: open-cluster-management
  register: acm_route
  until: acm_route.resources.0.status.ingress.0.conditions.0.type == 'Admitted'
  retries: 15
  delay: 2

- name: Wait for MCO Route creation
  kubernetes.core.k8s_info:
    kind: Route
    name: alertmanager
    namespace: open-cluster-management-observability
  register: mco_route
  until: mco_route.resources.0.status.ingress.0.conditions.0.type == 'Admitted'
  retries: 15
  delay: 2

- set_fact:
    acm_console_url: "{{ acm_route.resources.0.spec.host }}"
    mco_console_url: "{{ mco_route.resources.0.spec.host }}"

- name: Create a console-url secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      stringData:
        ACM_CONSOLE_URL: "{{ acm_console_url }}"
        ALERTMANAGER_URL: "{{ mco_console_url }}"
      kind: Secret
      metadata:
        name: console-url
        namespace: openshift-gitops
      type: Opaque

- name: Alert Manager configuration
  shell: |-
    # printf "=====================Create Alert manager config Argocd application ...\n"
    # if [ {{ ENV }} == "local" ]; then
    #   sed -i'' --expression 's@<SLACK_API_URL>@'{{ SLACK_API_URL }}'@g' ./../../cluster-bootstrap/alert-manager-config/overlay/local/app-alertmanager-config.yaml
    #   kubectl apply -k ./../../cluster-bootstrap/alert-manager-config/overlay/local
    # else
    #   kubectl apply -k ./../../cluster-bootstrap/argocd-apps/{{ ENV }}/alert-manager-config
    # fi
    printf "âœ“ Alert Manager configuration created!"
  register: result
