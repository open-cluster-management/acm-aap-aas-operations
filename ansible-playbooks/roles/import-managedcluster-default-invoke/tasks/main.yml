---

- name: Verify ACM Hub cluster connection
  shell: |-
    oc cluster-info
    oc get managedclusters -A

- name: Create manifests for Namespace and Managed Cluster CR
  kubernetes.core.k8s:
    state: present
    template:
      - path: 'managedcluster.yml'

- name: Create temporary SPOKE directory
  ansible.builtin.tempfile:
    state: directory
    suffix: spoke
  register: tempdir

- name: Generate the Import Blob
  shell: |-
    oc get secret {{ cluster_name }}-import -n {{ cluster_name }} -ojsonpath='{.data.crds\.yaml}' | base64 --decode > {{ tempdir.path }}/01_import.yaml
    oc get secret {{ cluster_name }}-import -n {{ cluster_name }} -ojsonpath='{.data.import\.yaml}' | base64 --decode > {{ tempdir.path }}/04_import.yaml

- name: Switch to Managed Cluster and Apply Import Blob
  shell: |-
    IMPORT_BLOB=$(cat {{ tempdir.path }}/{{ item }} | base64 -w 0)
    az aks command invoke --resource-group {{ AKS_MRG }} \
      --name {{ AKS_NAME }} \
      --subscription {{ AKS_SUB }} \
      --command "echo $IMPORT_BLOB | base64 --decode | kubectl apply -f -"
  with_items:
    - 01_import.yaml
    - 04_import.yaml
  when: detach is not defined

- name: Verify Hub and Spoke components
  shell: |
    oc get managedcluster {{ cluster_name }} -n {{ cluster_name }} -o yaml
    az aks command invoke \
      --resource-group {{ AKS_MRG }} \
      --name {{ AKS_NAME }} \
      --subscription {{ AKS_SUB }} \
      --command "kubectl get ns; kubectl get pods -n open-cluster-management-agent"
  register: hubspoke_out

- name: debug
  debug:
    msg: "{{ hubspoke_out.stdout_lines }}"

- name: Wait 2 minutes before detching the spoke
  wait_for:
    sleep: 60
  when: detach is defined

- name: Detaching managed cluster
  shell: |-
    oc delete managedcluster {{ cluster_name }}
  register: detach_out
  when: detach is defined

- name: Switch to Managed Cluster and Delete Import Blob
  shell: |-
    IMPORT_BLOB=$(cat {{ tempdir.path }}/{{ item }} | base64 -w 0)
    az aks command invoke --resource-group {{ AKS_MRG }} \
      --name {{ AKS_NAME }} \
      --subscription {{ AKS_SUB }} \
      --command "echo $IMPORT_BLOB | base64 --decode | kubectl delete -f -"
  with_items:
    - 01_import.yaml
    - 04_import.yaml
  when: detach is defined
